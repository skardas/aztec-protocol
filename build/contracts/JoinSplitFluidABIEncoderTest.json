{
  "contractName": "JoinSplitFluidABIEncoderTest",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[6]",
          "name": "",
          "type": "uint256[6]"
        }
      ],
      "name": "validateJoinSplitFluid",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[6]\",\"name\":\"\",\"type\":\"uint256[6]\"}],\"name\":\"validateJoinSplitFluid\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"AZTEC\",\"details\":\"JoinSplitFluid ABI Encoder Test Don't include this as an internal library. This contract uses a static memory table to cache elliptic curve primitives and hashes. Calling this internally from another function will lead to memory mutation and undefined behaviour. The intended use case is to call this externally via `staticcall`. External calls to OptimizedAZTEC can be treated as pure functions as this contract contains no storage and makes no external calls (other than to precompiles) * Copyright 2020 Spilsbury Holdings Ltd  * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details. * You should have received a copy of the GNU Lesser General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.*\",\"methods\":{},\"title\":\"JoinSplitFluidABIEncoderTest\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/suleymankardas/Desktop/aztec/aztec-protocol/contracts/test/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoderTest.sol\":\"JoinSplitFluidABIEncoderTest\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/suleymankardas/Desktop/aztec/aztec-protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol\":{\"keccak256\":\"0x37f37beb94054034421cbf2fd4d70fe2cca4b35a76987a9822810c1835a7156f\",\"urls\":[\"bzz-raw://3b5a9d8581bb44c89192a1977a4682c159befe12ddb50e111d46046ec5b792c3\",\"dweb:/ipfs/QmXsxjG71HjEz1tFef5pwSuAzmhDnfxkpFzffSikWjYF9T\"]},\"/Users/suleymankardas/Desktop/aztec/aztec-protocol/contracts/test/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoderTest.sol\":{\"keccak256\":\"0x2113eb2ade8c9424adfa07230a22fff30e2a2e1cfd81a49e3d87db83bf0b8521\",\"urls\":[\"bzz-raw://612d75db50cf6a558aac3ea0e9dea06f6f7753a415509c0ab1b5a7377a6c3271\",\"dweb:/ipfs/QmS5ABttfT3kKADqxrYLwhw6vGS73XJwChrNRRFT3cXPUk\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103ec806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063482b03a614610030575b600080fd5b6100af600480360361010081101561004757600080fd5b81019060208101813564010000000081111561006257600080fd5b82018360208201111561007457600080fd5b8035906020019184600183028401116401000000008311171561009657600080fd5b91935091506001600160a01b0381351690602001610124565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e95781810151838201526020016100d1565b50505050905090810190601f1680156101165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606061012e610136565b949350505050565b61014435610104018035610164356101240161018435610124016101a4356101440160026101a05260806101c05260c061022052600061026052600061028052610124356102a05260016102e052606061030052803560016000526080610120870160203760c06103205260016103405282356103605260a06000206103805260406103a05260016040511660ff1b602051176103c05260016080511660ff1b606051176103e052610200610240526101206102c052604082038101358061012001610400526001610420526060610440526080606088016020378060c0016104605260016104805284356104a05260a06000206104c052806040016104e05260016040511660ff1b602051176105005260016080511660ff1b606051176105205280602084038301610540376060600061044001528061054001816103200161020052816103c0016101e0528060c0602082015261010060408201526000606082015260006080820152610124356020526020802060a0820152602060c0820152600060e0820152610100810160028903602082015260028903602002610140830101915060025b8981101561038c576020600182030287013595508560408803013594506001600052608060c0820260608d01016020378460c00183526001602084015260206001820302880135604084015260a0600020606084015284604001608084015260016040511660ff1b6020511760a084015260016080511660ff1b6060511760c08401528460208803870160e0850137818303602082028301526020835101830192506001810190506102df565b5060208183030381528282036020810384526101a08303610180526020610160526101608303610160f3fea265627a7a723158207478142c48e0d508bea32471a641341d0aa261ab0bc6f24c627bef5118f3045564736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063482b03a614610030575b600080fd5b6100af600480360361010081101561004757600080fd5b81019060208101813564010000000081111561006257600080fd5b82018360208201111561007457600080fd5b8035906020019184600183028401116401000000008311171561009657600080fd5b91935091506001600160a01b0381351690602001610124565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e95781810151838201526020016100d1565b50505050905090810190601f1680156101165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606061012e610136565b949350505050565b61014435610104018035610164356101240161018435610124016101a4356101440160026101a05260806101c05260c061022052600061026052600061028052610124356102a05260016102e052606061030052803560016000526080610120870160203760c06103205260016103405282356103605260a06000206103805260406103a05260016040511660ff1b602051176103c05260016080511660ff1b606051176103e052610200610240526101206102c052604082038101358061012001610400526001610420526060610440526080606088016020378060c0016104605260016104805284356104a05260a06000206104c052806040016104e05260016040511660ff1b602051176105005260016080511660ff1b606051176105205280602084038301610540376060600061044001528061054001816103200161020052816103c0016101e0528060c0602082015261010060408201526000606082015260006080820152610124356020526020802060a0820152602060c0820152600060e0820152610100810160028903602082015260028903602002610140830101915060025b8981101561038c576020600182030287013595508560408803013594506001600052608060c0820260608d01016020378460c00183526001602084015260206001820302880135604084015260a0600020606084015284604001608084015260016040511660ff1b6020511760a084015260016080511660ff1b6060511760c08401528460208803870160e0850137818303602082028301526020835101830192506001810190506102df565b5060208183030381528282036020810384526101a08303610180526020610160526101608303610160f3fea265627a7a723158207478142c48e0d508bea32471a641341d0aa261ab0bc6f24c627bef5118f3045564736f6c63430005110032",
  "sourceMap": "1305:274:88:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1305:274:88;;;;;;;",
  "deployedSourceMap": "1305:274:88:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1305:274:88;;;;;;;;;;;;;;;;;;;1350:227;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1350:227:88;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1350:227:88;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1350:227:88;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1350:227:88;;-1:-1:-1;1350:227:88;-1:-1:-1;;;;;;1350:227:88;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1350:227:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:12;1530:40;:38;:40::i;:::-;1350:227;;;;;;:::o;1868:13063:25:-;2017:5;2004:19;1997:5;1993:31;2059:5;2046:19;2121:5;2108:19;2101:5;2097:31;2222:5;2209:19;2202:5;2198:31;2319:5;2306:19;2299:5;2295:31;5110:4;5103:5;5096:19;5229:4;5222:5;5215:19;5406:4;5399:5;5392:19;5491:4;5484:5;5477:19;5570:4;5563:5;5556:19;5663:5;5650:19;5643:5;5636:34;5988:4;5981:5;5974:19;6085:4;6078:5;6071:19;6214:8;6201:22;6295:4;6289;6282:18;6351:4;6343:5;6336;6332:17;6326:4;6313:43;6452:4;6445:5;6438:19;6547:4;6540:5;6533:19;6649:12;6636:26;6629:5;6622:41;6737:4;6731;6721:21;6714:5;6707:36;6821:4;6814:5;6807:19;7037:4;7030;7024:11;7020:22;7015:3;7011:32;6984:4;6978:11;6954:107;6931:5;6907:168;7286:4;7279;7273:11;7269:22;7264:3;7260:32;7233:4;7227:11;7203:107;7180:5;7156:168;7461:5;7454;7447:20;7549:5;7542;7535:20;7997:4;7987:8;7983:19;7968:13;7964:39;7951:53;8043:14;8036:5;8032:26;8025:5;8018:41;8118:4;8111:5;8104:19;8182:4;8175:5;8168:19;8356:4;8349;8342:5;8338:16;8332:4;8319:42;8459:14;8453:4;8449:25;8442:5;8435:40;8565:4;8558:5;8551:19;8656:11;8643:25;8636:5;8629:40;8757:4;8751;8741:21;8734:5;8727:36;8879:14;8873:4;8869:25;8862:5;8855:40;9106:4;9099;9093:11;9089:22;9084:3;9080:32;9053:4;9047:11;9023:107;9000:5;8976:168;9355:4;9348;9342:11;9338:22;9333:3;9329:32;9302:4;9296:11;9272:107;9249:5;9225:168;9468:14;9460:4;9450:8;9446:19;9431:13;9427:39;9420:5;9407:76;9599:4;9595:1;9588:5;9584:13;9577:27;10055:14;10048:5;10044:26;10309:14;10302:5;10298:26;10291:5;10284:41;10388:14;10381:5;10377:26;10370:5;10363:41;10522:18;10574:4;10567;10564:1;10560:12;10553:26;10641:5;10634:4;10631:1;10627:12;10620:27;10709:4;10702;10699:1;10695:12;10688:26;10765:4;10758;10755:1;10751:12;10744:26;10882:5;10869:19;10863:4;10856:33;10939:4;10933;10923:21;10916:4;10913:1;10909:12;10902:43;11221:4;11214;11211:1;11207:12;11200:26;11300:4;11293;11290:1;11286:12;11279:26;11431:5;11428:1;11424:13;11536:1;11533;11529:9;11522:4;11512:8;11508:19;11501:38;11658:1;11655;11651:9;11645:4;11641:20;11633:5;11630:1;11626:13;11622:40;11617:45;;11889:4;11874:2250;11902:1;11899;11896:8;11874:2250;;;12130:4;12123;12120:1;12116:12;12112:23;12102:8;12098:38;12085:52;12068:69;;12250:13;12243:4;12233:8;12229:19;12225:39;12212:53;12194:71;;12296:4;12290;12283:18;12484:4;12456;12453:1;12449:12;12442:4;12435:5;12431:16;12427:35;12401:4;12367:139;12608:14;12602:4;12598:25;12595:1;12588:36;12729:4;12722;12719:1;12715:12;12708:26;12882:4;12875;12872:1;12868:12;12864:23;12850:12;12846:42;12833:56;12826:4;12823:1;12819:12;12812:78;12979:4;12973;12963:21;12956:4;12953:1;12949:12;12942:43;13093:14;13087:4;13083:25;13076:4;13073:1;13069:12;13062:47;13351:4;13344;13338:11;13334:22;13329:3;13325:32;13294:4;13288:11;13260:119;13233:4;13230:1;13226:12;13198:199;13639:4;13632;13626:11;13622:22;13617:3;13613:32;13582:4;13576:11;13548:119;13521:4;13518:1;13514:12;13486:199;13819:14;13811:4;13801:8;13797:19;13782:13;13778:39;13771:4;13768:1;13764:12;13751:83;13978:8;13975:1;13971:16;13963:4;13960:1;13956:12;13946:8;13942:27;13935:53;14104:4;14100:1;14094:8;14090:19;14087:1;14083:27;14078:32;;11919:4;11916:1;11912:12;11907:17;;11874:2250;;;11878:17;14498:4;14487:8;14484:1;14480:16;14476:27;14466:8;14459:45;14641:18;14638:1;14634:26;14723:4;14704:17;14700:28;14680:18;14673:56;14763:5;14760:1;14756:13;14749:5;14742:28;14838:4;14831:5;14824:19;14877:5;14874:1;14870:13;14863:5;14856:28",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"../../../../ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol\";\n\n/**\n * @title JoinSplitFluidABIEncoderTest\n * @author AZTEC\n * @dev JoinSplitFluid ABI Encoder Test\n * Don't include this as an internal library. This contract uses a static memory table to cache\n * elliptic curve primitives and hashes.\n * Calling this internally from another function will lead to memory mutation and undefined behaviour.\n * The intended use case is to call this externally via `staticcall`.\n * External calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\n * storage and makes no external calls (other than to precompiles)\n *\n * Copyright 2020 Spilsbury Holdings Ltd \n *\n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n**/\ncontract JoinSplitFluidABIEncoderTest {\n\n    function validateJoinSplitFluid(\n        bytes calldata,\n        address,\n        uint[6] calldata\n    )\n        external\n        pure\n        returns (bytes memory)\n    {\n        JoinSplitFluidABIEncoder.encodeAndExit();\n    }\n}\n",
  "sourcePath": "/Users/suleymankardas/Desktop/aztec/aztec-protocol/contracts/test/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoderTest.sol",
  "ast": {
    "absolutePath": "/Users/suleymankardas/Desktop/aztec/aztec-protocol/contracts/test/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoderTest.sol",
    "exportedSymbols": {
      "JoinSplitFluidABIEncoderTest": [
        10121
      ]
    },
    "id": 10122,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10100,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:88"
      },
      {
        "absolutePath": "/Users/suleymankardas/Desktop/aztec/aztec-protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol",
        "file": "../../../../ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol",
        "id": 10101,
        "nodeType": "ImportDirective",
        "scope": 10122,
        "sourceUnit": 3132,
        "src": "33:80:88",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title JoinSplitFluidABIEncoderTest\n@author AZTEC\n@dev JoinSplitFluid ABI Encoder Test\nDon't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*",
        "fullyImplemented": true,
        "id": 10121,
        "linearizedBaseContracts": [
          10121
        ],
        "name": "JoinSplitFluidABIEncoderTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10119,
              "nodeType": "Block",
              "src": "1520:57:88",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 10114,
                        "name": "JoinSplitFluidABIEncoder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3131,
                        "src": "1530:24:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_JoinSplitFluidABIEncoder_$3131_$",
                          "typeString": "type(library JoinSplitFluidABIEncoder)"
                        }
                      },
                      "id": 10116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encodeAndExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3130,
                      "src": "1530:38:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 10117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:40:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10118,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:40:88"
                }
              ]
            },
            "documentation": null,
            "id": 10120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateJoinSplitFluid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10103,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10120,
                  "src": "1391:14:88",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10102,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:5:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10105,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10120,
                  "src": "1415:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10109,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10120,
                  "src": "1432:16:88",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$6_calldata_ptr",
                    "typeString": "uint256[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10106,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1432:4:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10108,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 10107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1437:1:88",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1432:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$6_storage_ptr",
                      "typeString": "uint256[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1381:73:88"
            },
            "returnParameters": {
              "id": 10113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10112,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10120,
                  "src": "1502:12:88",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10111,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:5:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1501:14:88"
            },
            "scope": 10121,
            "src": "1350:227:88",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10122,
        "src": "1305:274:88"
      }
    ],
    "src": "0:1580:88"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/suleymankardas/Desktop/aztec/aztec-protocol/contracts/test/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoderTest.sol",
      "exportedSymbols": {
        "JoinSplitFluidABIEncoderTest": [
          10121
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 10100,
        "name": "PragmaDirective",
        "src": "0:31:88"
      },
      {
        "attributes": {
          "SourceUnit": 3132,
          "absolutePath": "/Users/suleymankardas/Desktop/aztec/aztec-protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol",
          "file": "../../../../ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol",
          "scope": 10122,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 10101,
        "name": "ImportDirective",
        "src": "33:80:88"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": "@title JoinSplitFluidABIEncoderTest\n@author AZTEC\n@dev JoinSplitFluid ABI Encoder Test\nDon't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            10121
          ],
          "name": "JoinSplitFluidABIEncoderTest",
          "scope": 10122
        },
        "children": [
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "validateJoinSplitFluid",
              "scope": 10121,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10120,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 10102,
                        "name": "ElementaryTypeName",
                        "src": "1391:5:88"
                      }
                    ],
                    "id": 10103,
                    "name": "VariableDeclaration",
                    "src": "1391:14:88"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10120,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10104,
                        "name": "ElementaryTypeName",
                        "src": "1415:7:88"
                      }
                    ],
                    "id": 10105,
                    "name": "VariableDeclaration",
                    "src": "1415:7:88"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10120,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "uint256[6]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[6]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 10106,
                            "name": "ElementaryTypeName",
                            "src": "1432:4:88"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "36",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 6",
                              "value": "6"
                            },
                            "id": 10107,
                            "name": "Literal",
                            "src": "1437:1:88"
                          }
                        ],
                        "id": 10108,
                        "name": "ArrayTypeName",
                        "src": "1432:7:88"
                      }
                    ],
                    "id": 10109,
                    "name": "VariableDeclaration",
                    "src": "1432:16:88"
                  }
                ],
                "id": 10110,
                "name": "ParameterList",
                "src": "1381:73:88"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 10120,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 10111,
                        "name": "ElementaryTypeName",
                        "src": "1502:5:88"
                      }
                    ],
                    "id": 10112,
                    "name": "VariableDeclaration",
                    "src": "1502:12:88"
                  }
                ],
                "id": 10113,
                "name": "ParameterList",
                "src": "1501:14:88"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "encodeAndExit",
                              "referencedDeclaration": 3130,
                              "type": "function () pure"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3131,
                                  "type": "type(library JoinSplitFluidABIEncoder)",
                                  "value": "JoinSplitFluidABIEncoder"
                                },
                                "id": 10114,
                                "name": "Identifier",
                                "src": "1530:24:88"
                              }
                            ],
                            "id": 10116,
                            "name": "MemberAccess",
                            "src": "1530:38:88"
                          }
                        ],
                        "id": 10117,
                        "name": "FunctionCall",
                        "src": "1530:40:88"
                      }
                    ],
                    "id": 10118,
                    "name": "ExpressionStatement",
                    "src": "1530:40:88"
                  }
                ],
                "id": 10119,
                "name": "Block",
                "src": "1520:57:88"
              }
            ],
            "id": 10120,
            "name": "FunctionDefinition",
            "src": "1350:227:88"
          }
        ],
        "id": 10121,
        "name": "ContractDefinition",
        "src": "1305:274:88"
      }
    ],
    "id": 10122,
    "name": "SourceUnit",
    "src": "0:1580:88"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-03-28T14:36:05.548Z",
  "devdoc": {
    "author": "AZTEC",
    "details": "JoinSplitFluid ABI Encoder Test Don't include this as an internal library. This contract uses a static memory table to cache elliptic curve primitives and hashes. Calling this internally from another function will lead to memory mutation and undefined behaviour. The intended use case is to call this externally via `staticcall`. External calls to OptimizedAZTEC can be treated as pure functions as this contract contains no storage and makes no external calls (other than to precompiles) * Copyright 2020 Spilsbury Holdings Ltd  * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\"); you may not use this file except in compliance with the License. * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details. * You should have received a copy of the GNU Lesser General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.*",
    "methods": {},
    "title": "JoinSplitFluidABIEncoderTest"
  },
  "userdoc": {
    "methods": {}
  }
}